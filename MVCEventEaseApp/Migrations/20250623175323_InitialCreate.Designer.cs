// <auto-generated />
using System;
using MVCEventEaseApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCEventEaseApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623175323_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCEventEaseApp.Models.Bookings", b =>
                {
                    b.Property<int>("BookingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingID"));

                    b.Property<DateTime>("BookingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventID")
                        .HasColumnType("int");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("BookingID");

                    b.HasIndex("EventID");

                    b.HasIndex("VenueID");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingID = 1,
                            BookingDate = new DateTime(2023, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 1,
                            VenueID = 1
                        },
                        new
                        {
                            BookingID = 2,
                            BookingDate = new DateTime(2023, 10, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventID = 2,
                            VenueID = 2
                        });
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.EventType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EventTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Conference"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Wedding"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Expo"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Workshop"
                        });
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Events", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EventtypeID")
                        .HasColumnType("int");

                    b.Property<int>("VenueID")
                        .HasColumnType("int");

                    b.HasKey("EventID");

                    b.HasIndex("EventtypeID");

                    b.HasIndex("VenueID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            Description = "A conference for tech enthusiasts.",
                            EventDate = new DateTime(2023, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Tech Conference 2023",
                            VenueID = 1
                        },
                        new
                        {
                            EventID = 2,
                            Description = "A summit for business leaders.",
                            EventDate = new DateTime(2023, 11, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EventName = "Business Summit 2023",
                            VenueID = 2
                        });
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Venues", b =>
                {
                    b.Property<int>("VenueID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VenueID"));

                    b.Property<string>("Capacity")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Locations")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VenueName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VenueID");

                    b.ToTable("Venues");

                    b.HasData(
                        new
                        {
                            VenueID = 1,
                            Capacity = "500",
                            ImageURL = "https://example.com/images/grandhall.jpg",
                            IsAvailable = false,
                            Locations = "123 Main St, Cityville",
                            VenueName = "Grand Hall"
                        },
                        new
                        {
                            VenueID = 2,
                            Capacity = "300",
                            ImageURL = "https://example.com/images/cityconference.jpg",
                            IsAvailable = false,
                            Locations = "456 Elm St, Cityville",
                            VenueName = "City Conference Center"
                        });
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Bookings", b =>
                {
                    b.HasOne("MVCEventEaseApp.Models.Events", "Event")
                        .WithMany("Bookings")
                        .HasForeignKey("EventID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCEventEaseApp.Models.Venues", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Event");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Events", b =>
                {
                    b.HasOne("MVCEventEaseApp.Models.EventType", "EventType")
                        .WithMany()
                        .HasForeignKey("EventtypeID");

                    b.HasOne("MVCEventEaseApp.Models.Venues", "Venue")
                        .WithMany("Events")
                        .HasForeignKey("VenueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventType");

                    b.Navigation("Venue");
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Events", b =>
                {
                    b.Navigation("Bookings");
                });

            modelBuilder.Entity("MVCEventEaseApp.Models.Venues", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
